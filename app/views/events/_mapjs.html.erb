<script>
  var stepDisplay;
  var markerArray = [];
  var geocoder;
  var params_to_post = [];

  function initMap() {
    directionsService = new google.maps.DirectionsService;
    directionsDisplay = new google.maps.DirectionsRenderer;
    map = new google.maps.Map(document.getElementById('map'), {
      zoom: 16,
      // center: {lat: 25.0521298, lng: 121.5325289}
    });
    var infoWindow = new google.maps.InfoWindow({map: map});
    var geocoder = new google.maps.Geocoder();

    // Try HTML5 geolocation.
    resultsPos = new google.maps.LatLng(<%= '25.0495123' %>,<%= '121.5319727' %>)

    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        currentPos = new google.maps.LatLng(pos.lat,pos.lng);
        infoWindow.setPosition(pos);
        infoWindow.setContent('Location found.');
        map.setCenter(pos);
      }, function() {
        currentPos = new google.maps.LatLng(<%= '25.0521298' %>,<%= '121.5325289' %>)
        map.setCenter(currentPos);
        handleLocationError(true, infoWindow, map.getCenter());
      });
    } else {
      // Browser doesn't support Geolocation
      handleLocationError(false, infoWindow, map.getCenter());
    }
    directionsDisplay.setMap(map);
    var onChangeHandler = function() {
      calculateAndDisplayRoute(directionsService, directionsDisplay);
    };
    document.getElementById('submit').addEventListener('click', function() {
      geocodeAddress(geocoder, map);
    });
    document.getElementById('match_btn').addEventListener('click', onChangeHandler);
    stepDisplay = new google.maps.InfoWindow();
  };
  function geocodeAddress(geocoder, resultsMap) {
    var address = document.getElementById('address').value;
    var param;

    geocoder.geocode({'address': address}, function(results, status) {
      if (status === google.maps.GeocoderStatus.OK) {
        resultsPos = new google.maps.LatLng(results[0].geometry.location.lat(),results[0].geometry.location.lng());
        resultsMap.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
          map: resultsMap,
          position: results[0].geometry.location
        });

        calculateAndDisplayRoute(directionsService, directionsDisplay);
        $.each(results, function(index_of_results, results_i) {
          var addr_comp = [];
          $.each(results_i.address_components, function(index_of_addr_comp, addr_comp_i) {
            addr_comp.push(addr_comp_i);
          });
          params_to_post.push({
            place_id: results_i.place_id,
            formatted_address: results_i.formatted_address,
            latitude: results_i.geometry.location.lat(),
            longitude: results_i.geometry.location.lng(),
            address_components: addr_comp,
          });
        });
        console.log(params_to_post);
        $.ajax({
          type:'POST', 
          url: '/events.js', 
          beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
          data: $.param({params_to_post})
        }); 
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }
  function calculateAndDisplayRoute(directionsService, directionsDisplay) {
    // First, clear out any existing markerArray
    // from previous calculations.
    for (i = 0; i < markerArray.length; i++) {
      markerArray[i].setMap(null);
    }
    directionsService.route({
      origin: currentPos,
      destination: resultsPos,
      travelMode: google.maps.TravelMode.DRIVING
    }, function(response, status) {
      if (status === google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
        var route = response.routes[0];
        var summaryPanel = document.getElementById('directions-panel');
        summaryPanel.innerHTML = '';
        // For each route, display summary information.
        for (var i = 0; i < route.legs.length; i++) {
          var routeSegment = i + 1;
          summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
              '</b><br>';
          summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
          summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
          summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
          for (var j = 0; j < route.legs[i].steps.length; j++) {
            summaryPanel.innerHTML += route.legs[i].steps[j].instructions + route.legs[i].steps[j].distance.text + '<br><br>';
          }
        }
        showSteps(response);
      } else {
        window.alert('Directions request failed due to ' + status);
      }
    });
  };
  function showSteps(directionResult) {
    // For each step, place a marker, and add the text to the marker's
    // info window. Also attach the marker to an array so we
    // can keep track of it and remove it when calculating new
    // routes.
    var myRoute = directionResult.routes[0].legs[0];
    for (var i = 0; i < myRoute.steps.length; i++) {
        var marker = new google.maps.Marker({
          position: myRoute.steps[i].start_point,
          map: map
        });
        attachInstructionText(marker, myRoute.steps[i].instructions);
        markerArray[i] = marker;
    }
  };
  function attachInstructionText(marker, text) {
    google.maps.event.addListener(marker, 'click', function() {
      stepDisplay.setContent(text);
      stepDisplay.open(map, marker);
    });
  };
  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    infoWindow.setPosition(pos);
    infoWindow.setContent(browserHasGeolocation ?
                          'Error: The Geolocation service failed.' :
                          'Error: Your browser doesn\'t support geolocation.');
  };
</script>
<% google_config = Rails.application.config_for(:google) %>
<script src="https://maps.googleapis.com/maps/api/js?key=<%=google_config["app_id"]%>&callback=initMap" defer></script>